# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Production

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      PROJECT_ID: willdocs
      APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - name: Use Node.js 14.x
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
    - uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: willdocs
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: info
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Init Terraform
      run: |
        terraform -chdir=terraform init
        terraform -chdir=terraform output
    - run: yarn
    - name: Build Client
      run: |
        # Build Client
        STATIC_BUCKET=$(terraform -chdir=terraform/ output -raw static-bucket)
        echo "STATIC_BUCKET=$STATIC_BUCKET" >> $GITHUB_ENV
        export NEXT_PUBLIC_SIGNAL_URL=wss://${STATIC_BUCKET}/ws/signal
        export NEXT_PUBLIC_PROVIDER_URL=wss://${STATIC_BUCKET}/ws/provider
        yarn client build
    - name: upload client 
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: willdocs
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: cp -r packages/client/out/* gs://${{env.STATIC_BUCKET}}/
        cli: gsutil
    - run: yarn service build
    - run: |
        # zip up service bundle
        PRIVATE_BUCKET=$(terraform -chdir=terraform/ output -raw private-bucket)
        echo "PRIVATE_BUCKET=$PRIVATE_BUCKET" >> $GITHUB_ENV
        tar cfz service.tgz packages/service/dist/* packages/service/db/migrations node_modules/moniker/dict/*
    - name: upload service 
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: willdocs
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: cp ./service.tgz gs://${{env.PRIVATE_BUCKET}}/service/service.tgz
        cli: gsutil
    - name: Terraform Deploy
      run: |
        terraform -chdir=terraform taint google_compute_instance.app
        terraform -chdir=terraform apply --auto-approve
